{"version":3,"sources":["components/Statistics/Statistics.js","components/FeedbackOptions/FeedbackOptions.js","components/Section/Section.js","components/Notification/Notification.js","App.js","reportWebVitals.js","index.js","components/FeedbackOptions/FeedbackOptions.module.css","components/Section/Section.module.css","components/Notification/Notification.module.css"],"names":["Statistics","good","neutral","bad","total","positivePercentage","FeedbackOptions","options","onFeedback","className","s","map","option","button","type","name","onClick","Section","title","children","section","Notification","value","notification","App","state","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","e","target","setState","prev","this","posPercentage","Object","keys","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"iQAEe,SAASA,EAAT,GAMX,IAAD,IALCC,YAKD,MALQ,EAKR,MAJCC,eAID,MAJW,EAIX,MAHCC,WAGD,MAHO,EAGP,MAFCC,aAED,MAFS,EAET,MADCC,0BACD,MADsB,EACtB,EACC,OACI,qCACF,uCAAUJ,KACV,0CAAaC,KACb,sCAASC,KACT,wCAAWC,KACX,oDAAuBC,EAAvB,U,oBCZS,SAASC,EAAT,GAAkD,IAAvBC,EAAsB,EAAtBA,QAASC,EAAa,EAAbA,WAC/C,OACI,qBAAKC,UAAaC,IAAEH,QAApB,SACMA,EAAQI,KAAI,SAAAC,GAAM,OAChB,wBACIH,UAAWC,IAAEG,OAEbC,KAAK,SACLC,KAAMH,EACNI,QAASR,EALb,SAOHI,GALYA,Q,oBCNV,SAASK,EAAT,GAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACvC,OACE,0BAASV,UAAWC,IAAEU,QAAtB,UACGF,GAAS,oBAAIT,UAAWC,IAAEQ,MAAjB,SAAyBA,IAClCC,K,oBCHQ,SAASE,EAAT,GAAkC,IAAVC,EAAS,EAATA,MACrC,OAAO,mBAAGb,UAAWC,IAAEa,aAAhB,SAA+BD,I,ICElCE,E,4MACJC,MAAQ,CACNxB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPuB,mBAAqB,WACnB,MAA+B,EAAKD,MACpC,OADA,EAAQxB,KAAR,EAAcC,QAAd,EAAuBC,K,EAIzBwB,gCAAkC,WAChC,IAAMvB,EAAQ,EAAKsB,qBAEnB,OAAOE,KAAKC,MAAyB,IAAlB,EAAKJ,MAAMxB,KAAcG,I,EAE9CI,WAAa,SAAAsB,GACX,IAAMf,EAAOe,EAAEC,OAAOhB,KACtB,EAAKiB,UAAS,SAAAC,GAAI,sBAAQlB,EAAOkB,EAAKlB,GAAQ,O,4CAGhD,WACE,MAA+BmB,KAAKT,MAA5BxB,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACjBC,EAAQ8B,KAAKR,qBACbS,EAAgBD,KAAKP,kCAC3B,OACE,sBAAKlB,UAAU,MAAf,UACE,cAACQ,EAAD,CAASC,MAAM,wBAAf,SACE,cAACZ,EAAD,CACEC,QAAS6B,OAAOC,KAAKH,KAAKT,OAC1BjB,WAAY0B,KAAK1B,eAGV,IAAVJ,EACC,cAACiB,EAAD,CAAcC,MAAM,sBAEpB,cAACL,EAAD,CAASC,MAAM,aAAf,SACE,cAAClB,EAAD,CACEC,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,mBAAoB8B,a,GA3ChBG,aAqDHd,IChDAe,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAG1Bb,K,kBCZAc,EAAOC,QAAU,CAAC,QAAU,iCAAiC,OAAS,kC,kBCAtED,EAAOC,QAAU,CAAC,MAAQ,yB,kBCA1BD,EAAOC,QAAU,CAAC,aAAe,sC","file":"static/js/main.9ece631a.chunk.js","sourcesContent":["import PropTypes from \"prop-types\";\r\n\r\nexport default function Statistics({\r\n    good = 0,\r\n    neutral = 0,\r\n    bad = 0,\r\n    total = 0,\r\n    positivePercentage = 0,\r\n}) {\r\n    return (\r\n        <>\r\n      <p>Good: {good}</p>\r\n      <p>Neutral: {neutral}</p>\r\n      <p>Bad: {bad}</p>\r\n      <p>Total: {total}</p>\r\n      <p>Positive feadback: {positivePercentage}%</p>\r\n    </>\r\n    );\r\n}\r\n\r\nStatistics.propTypes = {\r\n    good: PropTypes.number,\r\n    neutral: PropTypes.number,\r\n    bad: PropTypes.number,\r\n    total: PropTypes.number,\r\n    positivePercentage: PropTypes.number\r\n}","import s from './FeedbackOptions.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function FeedbackOptions ({options, onFeedback}) {\r\n    return (\r\n        <div className = {s.options}>\r\n             {options.map(option =>(\r\n                <button\r\n                    className={s.button}\r\n                    key={option}\r\n                    type=\"button\"\r\n                    name={option}\r\n                    onClick={onFeedback}\r\n                >\r\n            {option}\r\n               </button>\r\n            ))}\r\n        </div>\r\n    )\r\n};\r\n\r\nFeedbackOptions.propTypes = {\r\n    options: PropTypes.array,\r\n    onFeedback: PropTypes.func,\r\n  };","import s from './Section.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function Section({ title, children }) {\r\n  return (\r\n    <section className={s.section}>\r\n      {title && <h2 className={s.title}>{title}</h2>}\r\n      {children}\r\n    </section>\r\n  );\r\n}\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n  children: PropTypes.any,\r\n};","import PropTypes from 'prop-types';\r\nimport s from './Notification.module.css';\r\n\r\n\r\nexport default function Notification({ value }) {\r\n  return <p className={s.notification}>{value}</p>;\r\n}\r\n\r\nNotification.propTypes = {\r\n  value: PropTypes.string,\r\n};","import { Component } from 'react';\nimport Statistics from './components/Statistics/Statistics';\nimport FeedbackOptions from './components/FeedbackOptions/FeedbackOptions';\nimport Section from './components/Section/Section';\nimport Notification from './components/Notification/Notification';\n\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  countTotalFeedback = () => {\n    const { good, neutral, bad } = this.state;\n    return good + neutral + bad;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    const total = this.countTotalFeedback();\n\n    return Math.round((this.state.good * 100) / total);\n  };\n  onFeedback = e => {\n    const name = e.target.name;\n    this.setState(prev => ({ [name]: prev[name] + 1 }));\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    const total = this.countTotalFeedback();\n    const posPercentage = this.countPositiveFeedbackPercentage();\n    return (\n      <div className=\"app\">\n        <Section title=\"Please leave feadback\">\n          <FeedbackOptions\n            options={Object.keys(this.state)}\n            onFeedback={this.onFeedback}\n          />\n        </Section>\n        {total === 0 ? (\n          <Notification value=\"No feedback given\" />\n        ) : (\n          <Section title=\"Statistics\">\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={total}\n              positivePercentage={posPercentage}\n            />\n          </Section>\n        )}\n      </div>\n    );\n  }\n\n}\n\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"options\":\"FeedbackOptions_options__PNN6Q\",\"button\":\"FeedbackOptions_button__1Yy3k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Section_title__3iYER\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notification\":\"Notification_notification__WlsUI\"};"],"sourceRoot":""}